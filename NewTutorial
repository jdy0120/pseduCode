import {
  ImageSourcePropType,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from 'react-native';

import AsyncStorage from '@react-native-community/async-storage';
import Button from '../shared/Button';
import { CommonImages } from '../../utils/DesignAssets';
import Modal from 'react-native-modal';
import React from 'react';
import Swiper from 'react-native-swiper';
import { colors } from '../../theme';
import { signinIcons } from '../../utils/Icons';
import { statusBarHeight } from '../../utils/Styles';
import styled from 'styled-components/native';
import { useAppContext } from '../../providers/AppProvider';
import { useNavigation } from '@react-navigation/native';

const styles = StyleSheet.create({
  modal: {
    borderWidth: 0,
    borderRadius: 10,
    borderColor: 'blue',
    backgroundColor: 'white',
    justifyContent: 'center',

    marginTop: 50,
    marginBottom: 50,
    marginLeft: 20,
    marginRight: 20,
  },
  wrapper: {
    width: '100%',
    height: '70%',
    borderWidth: 0,
    borderColor: 'green',
    alignContent: 'center',
  },
  containerWrapper: {
    borderWidth: 0,
    borderColor: 'purple',
    justifyContent: 'center',
    alignItems: 'center',
    width: 'auto',
    height: 100,
  },
  slide: {
    width: '100%',
    height: '100%',
    borderWidth: 0,
    borderColor: 'pink',
    backgroundColor: 'transparent',
  },
  text: {
    fontSize: 30,
    fontWeight: 'bold',
    fontFamily: 'NotoSansCJKkr-Bold',
    color: colors.black700,
  },
});

const StyledImage = styled.Image`
  width: 100%;
  height: 216;
  border-width: 0;
  border-color: red;
  margin-top: 82;
`;

const StyledView = styled.View`
  border-width: 0;
  border-color: red;
  align-items: center;
  margin-top: 100;
`;

const StyledBoldText = styled.Text`
  font-family: NotoSansCJKkr-Bold;
  font-size: 22px;
  line-height: 30px;
  color: ${colors.black700};
  border-width: 0;
  border-color: pink;
`;

const StyledMiddleText = styled.Text`
  font-family: NotoSansCJKkr-Medium;
  font-size: 22px;
  line-height: 30px;
  color: ${colors.black700};
  border-width: 0;
  border-color: pink;
`;

const StyledRegularText = styled.Text`
  font-family: NotoSansCJKkr-Regular;
  font-size: 14px;
  line-height: 20px;
  color: ${colors.black500};
  text-align: center;
  margin-top: 15;
  border-width: 0;
  border-color: pink;
`;

const ButtonContainer = styled.View`
  height: 150;
  border-width: 0;
  border-color: red;
`;

const SkipButton = styled.View`
  border-width: 0;
  border-color: red;
`;

const LoginButtonWrapper = styled.View`
  flex-direction: row;
  align-items: center;
  border-radius: 10;
  border-width: 0;
  border-color: pink;

  margin-right: 20;
  margin-left: 20;
  padding-top: 20;
  padding-bottom: 20;
`;

const StyledLogoImage = styled.Image`
  width: 100%;
  height: 100%;
  border-width: 0;
  border-color: pink;
`;

const LoginText = styled.Text`
  font-family: NotoSansCJKkr-Medium;
  font-size: 18;
  line-height: 26;
  color: ${({ theme }): string => theme.fontColor};
`;

interface CollectScreen {
  id: number;
  image: ImageSourcePropType;
  middleText: string;
  boldText: string;
  RegularText: string;
}

const NewTutorial = (): React.ReactElement => {
  const navigation = useNavigation();
  const [startVisible, setStartVisible] = React.useState<boolean>(false);
  const [tutorialDone, setTutorialDone] = React.useState<boolean>(false);
  const { setTutorialSeen } = useAppContext();

  const skipTutorial = async (): Promise<void> => {
    console.log(tutorialDone);
    await AsyncStorage.setItem('tutorialSeen', JSON.stringify(true)); // 튜토리얼 조회 한 것으로 저장
    setTutorialDone(true);
    setTutorialSeen(true);
    console.log(tutorialDone);
  };

  const collectScreen: CollectScreen[] = [
    {
      id: 0,
      image: CommonImages.NewAdjusterBg1,
      middleText: '쉽고 빠른\n',
      boldText: '예상 합의금 계산',
      RegularText:
        '자동차 약관을 근거로\n나에게 맞는 합의금을 계산할 수 있어요',
    },
    {
      id: 1,
      image: CommonImages.NewAdjusterBg2,
      middleText: '한 눈에 비교해보는\n',
      boldText: '나와 비슷한 사고',
      RegularText: '4만여 건의 데이터와\n나의 합의금을 비교해보세요',
    },
    {
      id: 2,
      image: CommonImages.NewAdjusterBg3,
      middleText: '내 편이 되어줄\n',
      boldText: '전문가와 무료 상담',
      RegularText: '손해사정사와 상담 후\n내 피해에 맞는 손해액을 알아보세요',
    },
    {
      id: 3,
      image: CommonImages.NewAdjusterBg4,
      middleText: '본인부담금 없는\n',
      boldText: '자동차보험 병원 예약',
      RegularText:
        '프리미엄 입원 병원부터\n가까이 있는 병원까지\n이제 제대로 치료받으세요',
    },
    {
      id: 4,
      image: CommonImages.NewAdjusterBg5,
      middleText: '믿고 맏기는\n',
      boldText: '무료 수리 & 수입차 렌트',
      RegularText:
        '국산차를 수입차로 업그레이드!\n차원이 다른 차량 수리 서비스를 경험하세요',
    },
  ];

  return (
    <Modal isVisible={true} style={styles.modal}>
      {tutorialDone ? (
        <View>
          <StyledImage
            source={CommonImages.NewAdjusterBg6}
            resizeMode={'contain'}
          />
          <StyledView>
            <StyledMiddleText style={{ textAlign: 'center' }}>
              {'간편하게 로그인하여\n'}
              <StyledBoldText>{'사고링크를 시작하세요'}</StyledBoldText>
            </StyledMiddleText>
          </StyledView>
          <LoginButtonWrapper
            style={{
              backgroundColor: '#ffdf2b',
              borderWidth: 0,
              borderColor: 'red',
              marginTop: 50,
              justifyContent: 'center',
            }}
          >
            <StyledLogoImage
              style={{ width: 20, height: 18 }}
              source={signinIcons.kakaoLogin}
              resizeMode={'contain'}
            />
            <LoginText style={{ marginLeft: 8 }}>
              {'카카오톡으로 로그인'}
            </LoginText>
          </LoginButtonWrapper>
          <LoginButtonWrapper
            style={{
              backgroundColor: '#222222',
              marginTop: 20,
              justifyContent: 'center',
            }}
          >
            <StyledLogoImage
              style={{ width: 18, height: 20 }}
              source={signinIcons.appleLogin}
              resizeMode={'contain'}
            />
            <LoginText style={{ marginLeft: 8, color: 'white' }}>
              {'Apple로 로그인'}
            </LoginText>
          </LoginButtonWrapper>
        </View>
      ) : (
        <>
          <View style={styles.wrapper}>
            <Swiper
              index={0}
              loop={false}
              loadMinimal={true}
              onIndexChanged={(index): void => {
                console.log(index);
                index === 4 ? setStartVisible(true) : setStartVisible(false);
              }}
              paginationStyle={{
                top: 344,
                borderWidth: 0,
                borderColor: 'red',
                justifyContent: 'center',
                alignItems: 'flex-start',
              }}
              dotStyle={{
                width: 10,
                height: 10,
                borderRadius: 20,
                backgroundColor: colors.black100,
                marginRight: 5,
                marginLeft: 5,
              }}
              activeDotStyle={{
                width: 10,
                height: 10,
                borderRadius: 20,
                backgroundColor: colors.exitBlue,
                marginRight: 5,
                marginLeft: 5,
              }}
            >
              {collectScreen.map((element: CollectScreen) => {
                return (
                  <View key={element.id} style={styles.slide}>
                    <StyledImage
                      source={element.image}
                      resizeMode={'contain'}
                    />
                    <StyledView>
                      <StyledMiddleText style={{ textAlign: 'center' }}>
                        {element.middleText}
                        <StyledBoldText>{element.boldText}</StyledBoldText>
                      </StyledMiddleText>
                      <StyledRegularText>
                        {element.RegularText}
                      </StyledRegularText>
                    </StyledView>
                  </View>
                );
              })}
            </Swiper>
          </View>
          <ButtonContainer>
            {startVisible ? (
              <SkipButton
                style={{
                  backgroundColor: colors.exitBlue,
                  borderRadius: 5,
                  marginHorizontal: 71,
                  paddingVertical: 20,
                }}
              >
                <TouchableOpacity onPress={skipTutorial}>
                  <Text
                    style={{
                      fontFamily: 'NotoSansCJKkr-Bold',
                      color: colors.white,
                      fontSize: 22,
                      textAlign: 'center',
                    }}
                  >
                    {'서비스 시작'}
                  </Text>
                </TouchableOpacity>
              </SkipButton>
            ) : (
              <SkipButton
                style={{
                  height: '100%',
                  alignItems: 'flex-end',
                  justifyContent: 'flex-end',
                  paddingRight: 40,
                }}
              >
                <TouchableOpacity onPress={skipTutorial}>
                  <StyledRegularText style={{ color: colors.black400 }}>
                    {'건너뛰기'}
                  </StyledRegularText>
                </TouchableOpacity>
              </SkipButton>
            )}
          </ButtonContainer>
        </>
      )}
    </Modal>
  );
};

export default NewTutorial;
